# Settings page name to identify the wanted setting in the database,
# if loadPlantSettingsFromDatabase in config.yml is true
# Otherwise no effect
settingsPageName: "default"
# Internal version of the config / settings content (will be used to merge settings / config without
# having to delete the plugin folder in the future)
# Don't change
settingsVersion: "SETTINGS_V2"
# Decide whether plants can grow if not especially told so by my plugin
# F. e. natural growth
# I did not test this extensively, should work if true.
# If you encounter bugs report please.
disableNaturalGrowth: false
# No effect yet (as of version 2.0.0)
respectUnloadedChunks: true
# If a new chunk is loaded, search for unregistered plants
# This is processed asynchronously and I haven't measured any
# performance impact (/tps).
# If set to false plants will be only registered on specific events
# f. e. if a player places a plant / villager harvests a crop etc.
useAggressiveChunkAnalysisAndLookForUnregisteredPlants: true
# THE DEFAULT SETTING "AIR" WAS REMOVED!
# IF YOU DELETE AN ENTRY FOR A PLANT, THE PLUGIN WILL STOP MANAGING IT
# If you don't want a specific plant to be managed (f. e. because of a clash with other plugins),
# remove it from this list
plantGrowthList:
  # EXAMPLE 1: Plant with unique timers for each growth step.
  # timeForNextPlantGrowthInSteps is false, so the array timeForNextPlantGrowthInSteps will be used.
  # Wheat has ages from 0 to 7 (7 growth steps, 8 unique ages)
  # The array needs to have 7 (!) elements then (if you define less, the sum is used instead until you fix it)
  # ALL NUMBERS ARE GIVEN IN SECONDS, ENTRY 180 = 3 MINUTES
  - material: "WHEAT"
    ignoreInAutomaticChunkAnalysis: false
    useTimeForPlantMature: false
    timeForPlantMature: 60
    timeForNextPlantGrowthInSteps:
      - 180
      - 180
      - 180
      - 240
      - 120
      - 120
      - 60
  # EXAMPLE 2: Plant with constant timers for each growth step.
  # useTimeForPlantMature is true, so the time in timeForPlantMature will be used.
  # Beetroots have ages from 0 to 7 (7 growth steps, 8 unique ages) and the given time to mature is 1080 seconds.
  # So to reach the next age it will take approx. 154 seconds (x 7 = 1080s).
  - material: "BEETROOTS"
    ignoreInAutomaticChunkAnalysis: false
    useTimeForPlantMature: true
    timeForPlantMature: 1080
    timeForNextPlantGrowthInSteps: []
  - material: "POTATOES"
    ignoreInAutomaticChunkAnalysis: false
    useTimeForPlantMature: true
    timeForPlantMature: 1080
    timeForNextPlantGrowthInSteps: []
  - material: "CARROTS"
    ignoreInAutomaticChunkAnalysis: false
    useTimeForPlantMature: true
    timeForPlantMature: 1080
    timeForNextPlantGrowthInSteps: []
  - material: "NETHER_WART"
    ignoreInAutomaticChunkAnalysis: false
    useTimeForPlantMature: true
    timeForPlantMature: 1800
    timeForNextPlantGrowthInSteps: []
  - material: "SWEET_BERRY_BUSH"
    ignoreInAutomaticChunkAnalysis: false
    useTimeForPlantMature: true
    timeForPlantMature: 1080
    timeForNextPlantGrowthInSteps: []
  # EXAMPLE 3: MELONS and PUMPKINS have a stem, that has the ages from 0 to 7
  # THE FRUIT is then grown, resulting in an age from 0 to 8 (8 growth steps, 9 unique ages).
  # Therefore, timeForNextPlantGrowthInSteps contains 8 elements
  # OR set useTimeForPlantMature to true and refer to Example 2
  - material: "MELON_STEM"
    ignoreInAutomaticChunkAnalysis: false
    useTimeForPlantMature: false
    timeForPlantMature: 60
    timeForNextPlantGrowthInSteps:
      - 120
      - 120
      - 120
      - 240
      - 120
      - 120
      - 60
      - 180
  - material: "PUMPKIN_STEM"
    ignoreInAutomaticChunkAnalysis: false
    useTimeForPlantMature: false
    timeForPlantMature: 60
    timeForNextPlantGrowthInSteps:
      - 120
      - 180
      - 60
      - 240
      - 120
      - 120
      - 60
      - 180
  - material: "CACTUS"
    ignoreInAutomaticChunkAnalysis: false
    useTimeForPlantMature: true
    timeForPlantMature: 1080
    timeForNextPlantGrowthInSteps: []
  - material: "SUGAR_CANE"
    ignoreInAutomaticChunkAnalysis: false
    useTimeForPlantMature: true
    timeForPlantMature: 1080
    timeForNextPlantGrowthInSteps: []
  # BAMBOO can grow to a max. of 16 blocks = an array of 15 is needed
  # or useTimeForPlantMature = true if you want to have constant growth (refer to EXAMPLE 1 and 2)
  - material: "BAMBOO"
    ignoreInAutomaticChunkAnalysis: true
    useTimeForPlantMature: false
    timeForPlantMature: 60
    timeForNextPlantGrowthInSteps:
      - 57
      - 70
      - 59
      - 76
      - 69
      - 66
      - 67
      - 67
      - 67
      - 74
      - 57
      - 78
      - 66
      - 76
      - 71
  - material: "COCOA"
    ignoreInAutomaticChunkAnalysis: false
    useTimeForPlantMature: true
    timeForPlantMature: 960
    timeForNextPlantGrowthInSteps: []
  # KELP can grow to a max. of 26 blocks = an array of 25 is needed
  # or useTimeForPlantMature = true if you want to have constant growth (refer to EXAMPLE 1 and 2)
  - material: "KELP"
    ignoreInAutomaticChunkAnalysis: true
    useTimeForPlantMature: false
    timeForPlantMature: 960
    timeForNextPlantGrowthInSteps:
      - 49
      - 35
      - 36
      - 46
      - 37
      - 41
      - 43
      - 32
      - 47
      - 43
      - 24
      - 42
      - 41
      - 56
      - 50
      - 50
      - 42
      - 50
      - 57
      - 47
      - 49
      - 36
      - 38
      - 45
      - 44
  # OAK_SAPLING and saplings in general are (internally in my plugin) assigned 2 ages:
  # 0 (sapling) 1 (mature, tree).
  # The array timeForNextPlantGrowthInSteps would contain 1 element if useTimeForPlantMature is true.
  # Therefore, timeForPlantMature can always be used for saplings, since there is always only 1 growth step.
  - material: "OAK_SAPLING"
    ignoreInAutomaticChunkAnalysis: false
    useTimeForPlantMature: true
    timeForPlantMature: 960
    timeForNextPlantGrowthInSteps: []
  - material: "BIRCH_SAPLING"
    ignoreInAutomaticChunkAnalysis: false
    useTimeForPlantMature: true
    timeForPlantMature: 960
    timeForNextPlantGrowthInSteps: []
  - material: "SPRUCE_SAPLING"
    ignoreInAutomaticChunkAnalysis: false
    useTimeForPlantMature: true
    timeForPlantMature: 960
    timeForNextPlantGrowthInSteps: []
  - material: "ACACIA_SAPLING"
    ignoreInAutomaticChunkAnalysis: false
    useTimeForPlantMature: true
    timeForPlantMature: 960
    timeForNextPlantGrowthInSteps: []
  - material: "DARK_OAK_SAPLING"
    ignoreInAutomaticChunkAnalysis: false
    useTimeForPlantMature: true
    timeForPlantMature: 960
    timeForNextPlantGrowthInSteps: []
  - material: "JUNGLE_SAPLING"
    ignoreInAutomaticChunkAnalysis: false
    useTimeForPlantMature: true
    timeForPlantMature: 960
    timeForNextPlantGrowthInSteps: []
  - material: "CHERRY_SAPLING"
    ignoreInAutomaticChunkAnalysis: false
    useTimeForPlantMature: true
    timeForPlantMature: 960
    timeForNextPlantGrowthInSteps: []
# EXPERIMENTAL EFFICIENCY SETTINGS:

# The plugin searches for overdue plants and searches for plants that have to yet be updated.
# maximumAmountOfPlantsInATimeWindowCluster is the time in milliseconds,
# where plants that have yet to be updated will be grouped together.
# F. e. if plants were planted 200ms apart from each other, you can set
# maximumAmountOfPlantsInATimeWindowCluster to 200 and all plants that were
# found in that time window will be updated on the same tick
# ... which results in theoretically less load on the server if used well
# f. e. you can remove 5 plant updates that are apart by only 2 - 3 ticks and grow them in only 1 step
maximumAmountOfPlantsInATimeWindowCluster: 1
# maximumTimeWindowInMillisecondsForPlantsToBeClustered is meant to be used alongside the previous setting.
# It sets the maximal amount of plants that can be fit in the defined timeslot defined in
# maximumAmountOfPlantsInATimeWindowCluster.
# F. e. you can have 34323 plants that fit the 200ms requirement, but only
# maximumTimeWindowInMillisecondsForPlantsToBeClustered will be handled per update cycle (2 - 3 ticks).
maximumTimeWindowInMillisecondsForPlantsToBeClustered: 1
